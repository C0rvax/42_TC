volumes:
  wordpress:
    name: wordpress
    driver: local
    driver_opts:
      device: /home/${LOGNAME}/data/wordpress
      o: bind
      type: none

  mariadb:
    name: mariadb
    driver: local
    driver_opts:
      device: /home/${LOGNAME}/data/mariadb
      o: bind
      type: none

networks:
  inception:
    name: inception
    driver: bridge

services:
  nginx:
    build: ./requirements/nginx/
    container_name: nginx
    ports:
      - "443:443"
    volumes:
      - wordpress:/var/www/html
    env_file: .env
    depends_on:
      - wordpress
    networks:
      - inception
    restart: always

  wordpress:
    build: ./requirements/wordpress/
    container_name: wordpress
    volumes:
      - wordpress:/var/www/html
    env_file: .env
    depends_on:
      - mariadb
      - redis
    networks:
      - inception
    restart: always

  mariadb:
    build: ./requirements/mariadb/
    container_name: mariadb
    volumes:
      - mariadb:/var/lib/mysql
    env_file: .env
    networks:
      - inception
    restart: always
    # healthcheck:
    #   test: ["CMD", "nc", "-zv", "mariadb", "3306"]
    #   interval: 3s
    #   timeout: 5s
    #   retries: 5

  redis:
    build: ./requirements/bonus/redis/
    container_name: redis
    volumes:
      - wordpress:/var/www/html
    env_file: .env
    networks:
      - inception
    # healthcheck:
    #   test: ["CMD", "redis-cli", "ping"] # ping Redis
    #   interval: 3s
    #   timeout: 5s
    #   retries: 5
    restart: always

  ftp:
    build: ./requirements/bonus/ftp/
    container_name: ftp
    ports:
      - "21:21"
      - "30000-30009:30000-30009" # Pasive ports
    env_file: .env
    volumes:
      - wordpress:/home/fetep/ftp/files
    depends_on:
      - wordpress
    networks:
      - inception
    restart: always

  adminer:
    build: ./requirements/bonus/adminer/
    container_name: adminer
    ports:
      - "8081:8080"
    depends_on:
      - mariadb
    networks:
      - inception
    restart: always

  # portainer:
  #   build: ./requirements/bonus/portainer/
  #   container_name: portainer
  #   ports:
  #     - "9000:9000"  # Accès à l'interface web de Portainer
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - portainer_data:/data
  #     - /usr/libexec/docker/cli-plugins:/usr/libexec/docker/cli-plugins:ro
  #   networks:
  #     - inception
  #   restart: always

#   grafana:
#     build: ./requirements/bonus/grafana/
#     container_name: grafana
#     ports:
#       - "3000:3000"
#     depends_on:
#         - prometheus
#     networks:
#       - inception
#     restart: always
#
#
#   prometheus:
#     build: ./requirements/bonus/prometheus/
#     container_name: prometheus
#     ports:
#       - "9090:9090"
#     networks:
#       - inception
#     restart: always
# #    expose:
# #      - "9090"
#
#   cadvisor:
#     build: ./requirements/bonus/cadvisor/
#     container_name: cadvisor
#     volumes:
#       # Need access to Docker information on the host
#       - /:/rootfs:ro
#       - /var/run:/var/run:ro
#       - /sys:/sys:ro
#       - /var/lib/docker/:/var/lib/docker:ro
#       # Mount docker socket (read-only is safer)
#       - /var/run/docker.sock:/var/run/docker.sock:ro
#     networks:
#       - inception
#     restart: always
